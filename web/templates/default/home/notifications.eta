<div id="notifications">
    <form @submit.prevent="handleSubmit">
    
        <div class="field">
            <label class="label">title</label>
            <div class="control">
                <input class="input" type="text" name="title" v-model="title" placeholder="">
            </div>
        </div>

        <div class="field">
            <label class="label">body</label>
            <div class="control">
                <input class="input" type="text" name="body" v-model="body" placeholder="">
            </div>
        </div>

        <div class="field">
            <label class="label">tag</label>
            <div class="control">
                <input class="input" type="text" name="tag" v-model="tag" placeholder="">
            </div>
        </div>

        <div class="field">
            <label class="label">icon</label>
            <div class="control">
                <input class="input" type="text" name="icon" v-model="icon" placeholder="">
            </div>
        </div>

        <div class="field">
            <label class="label">badge</label>
            <div class="control">
                <input class="input" type="text" name="badge" v-model="badge" placeholder="">
            </div>
        </div>

        <div class="field">
            <label class="label">image</label>
            <div class="control">
                <input class="input" type="text" name="image" v-model="image" placeholder="">
            </div>
        </div>

        <div class="field">
            <label class="label">urgency</label>
            <div class="control">
                <div class="select">
                    <select v-model="urgency">
                        <option v-for="urgency in ['very-low','low','normal','high','very-high']" :key="urgency" :value="urgency">{{ urgency }}</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="field">
            <label class="label">direction</label>
            <div class="control">
                <div class="select">
                    <select v-model="dir">
                        <option v-for="dir in ['ltr','auto','rtl']" :key="dir" :value="dir">{{ dir }}</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="field">
            <div class="control">
                <label class="checkbox">
                    <input v-model="requireInteraction" type="checkbox" :checked="requireInteraction">
                    require Interaction
                </label>
            </div>
        </div>

        <div class="field">
            <div class="control">
                <label class="checkbox">
                    <input v-model="persistent" type="checkbox" :checked="persistent">
                    persistent
                </label>
            </div>
        </div>

        <br><br>
        <div class="field is-grouped">
            <div class="control">
                <button type="button" @click="handleSubmit()" class="button is-primary">Send</button>
            </div>

            <div class="control">
                <button type="button" @click="handleSubmit(true)" class="button is-link">Force Send</button>
            </div>
        </div>
    </form>
</div>

<script type="module">

	import { createApp } from 'vue';
	
	const notifications = createApp({
		data() {
			return {
				title: "<%= it.data.title %>",
                body: "<%= it.data.body %>",
                tag: "<%= it.data.tag %>",
                icon: "<%= it.data.icon %>",
                badge: "<%= it.data.badge %>",
                image: "<%= it.data.image %>",
                urgency: "<%= it.data.urgency %>",
                requireInteraction: <%= it.data.requireInteraction %>,
                persistent: <%= it.data.persistent %>,
                dir: "<%= it.data.dir %>"
			}
		},
		methods:{

            async handleSubmit(isForced = false) {

                // Prepare form data (optional)
                const formData = {
                    title: this.title,
                    body: this.body,
                    tag: this.tag,
                    icon: this.icon,
                    badge: this.badge,
                    image: this.image,
                    urgency: this.urgency,
                    requireInteraction: this.requireInteraction,
                    persistent: this.persistent,
                    dir: this.dir,
                    isForced
                };

                const response = await fetch('/sendNotifications',{
                    method: 'post',
                    body: JSON.stringify(formData),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
            },

		}
	})

	notifications.mount('#notifications');

</script>