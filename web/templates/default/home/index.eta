<section id="hero" class="hero is-primary mt-4">

	<div class="hero-body">

		<div class="select is-primary is-small">
			<select v-on:change="changedLanguage" v-model="text.language">
				<option value="en">English</option>
				<option value="ro">Romanian</option>
				<option value="it">Italian</option>
				<option value="ja">Japanese</option>
				<option value="hu">Hungarian</option>
				<option value="fr">French</option>
				<option value="bg">Bulgarian</option>
				<option value="ar">Arabic</option>
				<option value="zh">Chinese</option>
				<option value="el">Greek</option>
				<option value="ru">Russian</option>
				<option value="es">Spanish</option>
				<option value="sv">Swedish</option>
				<option value="tr">Turkish</option>
				<option value="uk">Ukrainian</option>
			</select>
		</div>
		
		<div class="content">

			<h3 class="title is-size-3 has-text-centered">About me</h3>

			<div class="field">
				<figure class="image is-128x128 mx-auto">
					<img class="is-rounded" src="/assets/default/img/avatar.jpg">
				</figure>
			</div>

			<progress v-if="isLoading" class="progress is-large is-primary" max="100">Loading...</progress>

			<p v-for="sText in text.list[text.language]" v-html="formatText(sText)" class="is-size-5"></p>

		</div>
	</div>
	
</section>

<footer class="footer">
	
  <div class="content has-text-centered">
	<h3 class="title is-size-6 has-text-centered mb-1">You can find me here</h3>
    <a href="https://www.linkedin.com/in/cristian-pirloaga-16404ab7/" target="_blank" class="is-size-2 has-text-link">
		<span class="icon">
			<i class="fab fa-linkedin"></i>
		</span>
    </a>
	&nbsp;
	<a href="https://www.facebook.com/pirloaga.cristian" target="_blank" class="is-size-2 has-text-link">
		<span class="icon">
			<i class="fab fa-facebook"></i>
		</span>
    </a>
	
  </div>
</footer>

<script type="module">

	import { createApp } from 'vue';
	
	const hero = createApp({
		data() {
			return {
				isLoading: false,
				text:{
					language: 'en',
					list: {
						en: <%~ JSON.stringify(it.aTexts) %>
					}
				}
			}
		},
		methods:{
			formatText: function(text){
				// Array of words to be wrapped in <b> tags
				const wordsToBold = ['HTML', 'CSS', 'JavaScript', 'Vue.js','PHP','Laravel','Node.js','MySQL','MongoDB','Git'];

				// Create a regular expression pattern to match any of the words in the array
				const regexPattern = new RegExp(`\\b(${wordsToBold.join('|')})\\b`, 'gi');

				// Replace each matched word with its equivalent wrapped in <b> tags
				return text.replace(regexPattern, '<b>$1</b>');
			},
			changedLanguage: async function(){
				
				if(this.text.list[this.text.language] != null)
					return;
				
				this.isLoading = true;
				const response = await fetch('/translate',{
					method: 'post',
					body: JSON.stringify({
						text: this.text.list.en,
						toLanguage: this.text.language
					}),
					headers: {'Content-Type': 'application/json'}
				});
				
				const data = await response.json();
				
				this.isLoading = false;

				if(data.error){
					this.errors['default'] = data.data.message;

					return;
				}

				this.text.list[this.text.language] = data.data.text;
				
			}
		}
	})

	hero.mount('#hero');

</script>


